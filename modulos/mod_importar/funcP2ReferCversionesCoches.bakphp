<?php 
/*
 * @version     0.1
 * @copyright   Copyright (C) 2017 Catalogo productos Soluciones Vigo.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 * @author      Ricardo Carpintero && Alberto Lago
 * @Descripcion	Funciones en php para realizar las tareas de Paso2ReferenciasCVersion.
 *  */

	function CochesCrearTablas($BDImportRecambios,$ConsultaImp) {
		$tablas= array('marcas','combustibles','modelos','versiones');
		$consultas = array();
		$array = array();
		$creartabla = array();
		// Consulta para crear la tabla de marcas, debería comprobar si existe antes.
		$consultas[0]= 'CREATE TABLE '.$tablas[0].' ( `id` INT NOT NULL AUTO_INCREMENT, `descripcion` VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL , PRIMARY KEY (`id`)) ENGINE = InnoDB';
		// Consulta para crear la tabla de combustible, debería comprobar si existe antes.
		$consultas[1]= 'CREATE TABLE '.$tablas[1].' (   `id` int(11) NOT NULL AUTO_INCREMENT,   `descripcion` varchar(50) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL, PRIMARY KEY (id)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_spanish_ci';
		// Consulta para crear la tabla de modelos, debería comprobar si existe antes.
		$consultas[2]= 'CREATE TABLE '.$tablas[2].' (`id` int(11) NOT NULL AUTO_INCREMENT,`MarcaDescrip` varchar(100) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL,`id_marca` int(11) NOT NULL,`descripcion` varchar(100) COLLATE utf8_spanish_ci NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_spanish_ci';

		// Consulta para crear la tabla de versiones, debería comprobar si existe antes.
		$consultas[3]= 'CREATE TABLE '.$tablas[3].' (`id` int(11) NOT NULL AUTO_INCREMENT,`id_modelo` int(11) NOT NULL,
  `ModeloVersion` varchar(100) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL,`descripcion` varchar(100) COLLATE utf8_spanish_ci NOT NULL,`kw` int(2) NOT NULL,`cv` int(3) NOT NULL,`Cm3` int(4) NOT NULL,`Ncilindros` int(2) NOT NULL,
  `FechaInici` date NULL,`FechaFinal` date NULL,`id_combustible` int(11) NOT NULL,`TipoCombustible` varchar(50) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL,`estado` varchar(100) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL,
  `uno` int(11) NOT NULL,`dos` int(11) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_spanish_ci';
		
		for ($i = 0; $i <= 3; $i++) {
			$creartabla[$i] = $BDImportRecambios->query($consultas[$i]);
			$array['creartabla'][$i] = $creartabla[$i];
			$array['consulta'][$i] = $consultas[$i];

		}
		return $array;
	
	
	}
	
	
	function CochesInsertTemporal ($BDImportRecambios,$ConsultaImp) {
		$tablas= array('marcas','combustibles','modelos','versiones');
		$consultas = array();
		$array = array();
		$insert = array();
		
		$consultas[0]='INSERT INTO '.$tablas[0].' (`descripcion`) SELECT DISTINCT `MarcaDescrip` FROM `referenciascversiones`;';
		
		$consultas[1]='INSERT INTO '.$tablas[1].' (`descripcion`) SELECT DISTINCT `TipoCombustible` FROM `referenciascversiones` WHERE TipoCombustible IS NOT NULL;';

		$consultas[2]='INSERT INTO '.$tablas[2].' (MarcaDescrip, id_marca, descripcion) SELECT DISTINCT MarcaDescrip, 0, ModeloVersion FROM `referenciascversiones`;';
		
		$consultas[3]='INSERT INTO '.$tablas[3].' (id_modelo, ModeloVersion, descripcion,  `kw`,  `cv`,  `Cm3`,  `Ncilindros`,  `FechaInici`,  `FechaFinal`, id_combustible,  `TipoCombustible`)  SELECT DISTINCT 0, ModeloVersion,VersionAcabado,   `kw`,  `cv`,  `Cm3`,  `Ncilindros`,  `FechaInici`,  `FechaFinal`, 0,  `TipoCombustible` FROM `referenciascversiones`;';
		
		for ($i = 0; $i <= 3; $i++) {
			$insert[$i] = $BDImportRecambios->query($consultas[$i]);
			$array['insert'][$i] = $insert[$i];
		}
		return $array;
		
		
		
		
	}
	
	function CochesUpdateTemporal ($BDImportRecambios,$ConsultaImp) {
		$tablas= array('marcas','combustibles','modelos','versiones');
		$consultas = array();
		$array = array();
		$update = array();
		
		$consultas[0]='UPDATE modelos, marcas SET modelos.id_marca=marcas.id WHERE modelos.MarcaDescrip=marcas.descripcion;';
		$consultas[1] = 'UPDATE versiones, modelos SET versiones.id_modelo=modelos.id WHERE versiones.ModeloVersion=modelos.descripcion';
		$consultas[2] = 'UPDATE versiones, combustibles SET versiones.id_combustible=combustibles.id WHERE versiones.TipoCombustible=combustibles.descripcion';
		for ($i = 0; $i <= 2; $i++) {
			$update[$i] = $BDImportRecambios->query($consultas[$i]);
			$array['update'][$i] = $update[$i];
		}
		return $array;
	
		
	
	return $array;
	}
	
	
	function CochesObtenerRegistros($BDImportRecambios,$ConsultaImp,$Buscar) {
		// Solo obtenemos el numero total de Referencias distintas que vamos a gestionar.
		// por lo que no hay riesgo de exceso de memoria.
		$array = array();
		$wheres = array();
		// obtenemos datos de referenciasCversiones las RefProveedor distintos que estado = blanco y RecambioID sea 0
	    $tabla ="referenciascversiones";
	    if ($Buscar == 'IDrecambio'){
			$andWhere = "RecambioID =0 ";
		} else {
			$andWhere = "IdVersion =0 ";
		}
	    
		$whereC = " WHERE Estado = '' and ".$andWhere;
		$campo = 'RefProveedor';
		$resultados =$ConsultaImp->distintosCampo($BDImportRecambios,$tabla,$campo,$whereC);
		$array['TotalReferenciasDistintas'] = $resultados['NItems'];
		$array['consulta'] = $whereC;

		return $array;
		
	
	}
	
	
	
	
	
	
	
	function CochesIDRecambioTemporal ( $BDRecambios,$BDImportRecambios,$ConsultaImp,$Fabricante) {
		$array = array();
		$wheres = array();
		// obtenemos datos de referenciasCversiones las RefProveedor distintos que estado = blanco y RecambioID sea 0
	    $tabla ="referenciascversiones";
		$whereC = " WHERE Estado = '' and RecambioID =0 limit 200";
		$campo = 'RefProveedor';
		$resultados =$ConsultaImp->distintosCampo($BDImportRecambios,$tabla,$campo,$whereC);
		if ($resultados['NItems']>0){
			// Ahora tenemos que buscar el resultado en BDRecambios para obtener ID
			// Hay que contar con que puede que no existan todas las referencias.
			$f= $Fabricante;
			$RefNoencontradas = array();
			$ReferenciaEncontrada = array();
			$ErrorRefPrincipal = 0;
			$i = 0;
			foreach ( $resultados as $resultado) {
				// Recuerda que el resultado no tiene un array directo ya tien NItems y alguna cosa mas por eso debemos hacer condicional
				if (isset($resultado['RefProveedor'])){
					// Inicializamos varibles
					$ref = '';
					$idRecambio = 0 ;
					// 	1.- Comprobamos si existe la referencia principal.
					// 		Buscamos en BDRecambios en tabla referencias cruzadas si existe la referencia principal.
					$ref= $resultado['RefProveedor'];
					$consul = "SELECT * FROM `referenciascruzadas` WHERE RefFabricanteCru = '" . $ref . "' and IdFabricanteCru = '" . $f . "'";
					$ejconRefFab = mysqli_query($BDRecambios, $consul);
					$resul = mysqli_fetch_assoc($ejconRefFab);
					$idRecambio = $resul['RecambioID']; // Id de recambio que vamos a cruzar
					if ($idRecambio == 0 ) {
					// Esto es que no encontro la rreferencia principal
						$RefNoencontradas[$i] ='"'.$ref.'"';
					} else {
					//~ $array[$i] = var_export ($ref);
					$ReferenciaEncontrada[$i]["id"] = $idRecambio; 
					$ReferenciaEncontrada[$i]['Referencia'] = $ref; 
					}	
					$i++;
				}
				
			}
			
			$array['Ref_Principal_Entregadas'] = $i;
			// Ahora cambiamos el estado de todos las referencias que no se encontraron.
			// En BDImportar/ReferenciCruzadas en campo Estado
			// Estado ='[ERROR P2-23]:Referencia Principal no existe.'
			$ReferenciasError = 'RefProveedor='.implode(' OR RefProveedor=',$RefNoencontradas);
			$consul = "UPDATE ".$tabla." SET `Estado`='[ERROR P2-23]:Referencia Principal no existe.' WHERE ".$ReferenciasError;
			$ConsErr = $BDImportRecambios->query($consul);
			$ErrorRefPrincipal= $BDImportRecambios->affected_rows;
			$array['RegistrosErrorRefPrincipal'] = $ErrorRefPrincipal;
			
			
			// Ahora creo implode para las encontradas.
			$array['Consulta1'] = '';
			$array['Consulta2'] = '';
			foreach ( $ReferenciaEncontrada as $referencia){
				$array['Consulta1'] = $array['Consulta1'].' WHEN "'.$referencia['Referencia'].'" THEN '.$referencia["id"];
				if (strlen($array['Consulta2']) >0 ){
					$array['Consulta2'] = $array['Consulta2'].',"'.$referencia['Referencia'].'"';
				} else {
					$array['Consulta2'] = '"'.$referencia['Referencia'].'"'	;
				}
			}
			// Montamos update para añadir ID de Recambio
			$consul = "UPDATE ".$tabla." SET `RecambioID` = CASE `RefProveedor` ".$array['Consulta1']." END WHERE RefProveedor IN (".$array['Consulta2'].")";
			$Anhadir = $BDImportRecambios->query($consul);
			$AnhadirIDRecambio= $BDImportRecambios->affected_rows;
			$array['RegistroAnhadirIDRecambio'] = 	$AnhadirIDRecambio;
					
			
			
		}
		
		$array['TotalReferenciasDistintas'] = $resultados['NItems'];
		//~ $array['NoEncontrados'] =$RefNoencontradas;
		return $array;
	
		
	
	}
	
	
	
	function CochesResumen($BDImportRecambios,$ConsultaImp) {
		// En esta función lo que vamos a realizar es el resumen de tabla referenciascversiones
		// y obtenemos los datos para mostralos.
		$array = array();
		$andWheres = array('RecambioID','IdVersion');
		// obtenemos datos de referenciasCversiones las RefProveedor distintos que estado = blanco y RecambioID sea 0
	    $tabla ="referenciascversiones";
		$i = 0;
		foreach ($andWheres as $andWhere) {
	   		$whereC = " WHERE Estado = '' and ".$andWhere.'= 0';
			$campo = 'RefProveedor';
			$resultados =$ConsultaImp->distintosCampo($BDImportRecambios,$tabla,$campo,$whereC);
			$array[$i]['TotalReferenciasDistintas'] = $resultados['NItems'];
			//~ $array[$i]['consulta'] = $whereC;
			$i++;
		}
		// Ahora volvemos hacer lo mismo pero comprobando aquellos que tiene registros.. esto solo debe suceder cuando ya ejecutamos AJAX
		$i = 0;
		foreach ($andWheres as $andWhere) {
	   		$whereC = " WHERE Estado = '' and ".$andWhere.'> 0';
			$campo = 'RefProveedor';
			$resultados =$ConsultaImp->distintosCampo($BDImportRecambios,$tabla,$campo,$whereC);
			$array[$i]['RefDistintasConID'] = $resultados['NItems'];
			$array[$i]['consulta'] = $whereC;
			$i++;
		}
		// Ahora obtenemos la NItems distintos que tiene error en campo.
		// El error de:
		// Estado ='[ERROR P2-23]:Referencia Principal no existe.
			$whereC = " WHERE Estado = '[ERROR P2-23]:Referencia Principal no existe.'";
			$campo = 'RefProveedor';
			$resultados =$ConsultaImp->distintosCampo($BDImportRecambios,$tabla,$campo,$whereC);
			$array['RefDistintasError'] = $resultados['NItems'];
		
		// Ahora contamos registros
			$whereC= ' ';
			$resultado = $ConsultaImp->contarRegistro($BDImportRecambios,$tabla,$whereC);
			$array['TotalRegistro'] = $resultado;
		// Ahora contamos con estado cubierto:
			$whereC= "  WHERE `Estado`<>' ' or (`RecambioID`>0 and `IdVersion`>0)";
			$resultado = $ConsultaImp->contarRegistro($BDImportRecambios,$tabla,$whereC);
			$array['RegistroVistos'] = $resultado;
		return $array;
	}
	
	
	
	function CochesIDVersiones($BDVehiculos,$BDImportRecambios,$ConsultaImp) {
		// Reinicio de variables
		$Resumen = array();
		
		$array = array();
		$combustibles = array();
	    $tabla ="referenciascversiones";

		// Ahora contamos con estado cubierto o ID cubierto:
			$whereC= "  WHERE `Estado`<>' ' or (`RecambioID`>0 and `IdVersion`>0)";
			$resultado = $ConsultaImp->contarRegistro($BDImportRecambios,$tabla,$whereC);
		
		$Resumen['RegistroVistos'] = $resultado;
		// Antes de hacer nada creamos array de combustible
		$nombretabla = 'vehiculo_combustibles';
		$BuscarTipoCombustible = "Select * FROM ".$nombretabla;
		$Bcombustible = $BDVehiculos->query($BuscarTipoCombustible);
		
		while ($row = $Bcombustible->fetch_assoc()){
			$OtrasDecripciones = array();
			// Añadimos si hay mas descripciones , sino no.
			if (strlen($row['OtrasDescripciones']) > 0 ) {
				$OtrasDecripciones = explode(",",$row['OtrasDescripciones']);
			}
			// Añadimos descripcion principal si no existe en array.
			
			$Expresion = "/".$row['nombre']."/i";
			if (!preg_grep($Expresion,$OtrasDecripciones)){
				// Si no existe entonces añadimos el principal.
				$OtrasDecripciones[] =  $row['nombre'];
			}
			$combustibles[$row['id']] = $OtrasDecripciones;
		}
	
		// Ahora empezamos para buscar IDVersiones

		// Consultamos tabla recambiosVersiones y obtenemos los datos 
		
		$campos = array('VersionAcabado','kw','cv','Cm3','Ncilindros','TipoCombustible');
		$nombretabla= "referenciascversiones";
		//~ $whereC = " WHERE Estado = '' and ( RecambioID >0 and IdVersion=0) limit 100";
		//~ $resultado = $ConsultaImp->registroLineas($BDImportRecambios,$nombretabla,$campo,$whereC);
		
		$CampoDistinct = implode(",", $campos);
		// Realizamos un select con concatenado campos para buscar las versiones distintas que hay.
		$QueryDis = 'SELECT distinct(concat('.$CampoDistinct.")) as concatenado,MarcaDescrip,ModeloVersion,FechaInici,FechaFinal,RecambioID,".$CampoDistinct."  FROM `referenciascversiones` WHERE Estado = '' and ( RecambioID >0 and IdVersion=0) limit 40";
		//~ $array['consulta'] = $QueryDis;

		$resultado = $BDImportRecambios->query($QueryDis);
		// Ahora obtenemos los datos de 100
		$array['NItems'] = $resultado->num_rows;

		if ($array['NItems']>0){
			$i=0;
			while ($row_planets = $resultado->fetch_assoc()) {
				$array[$i]['concatenado1'] = $row_planets['concatenado'];
				$array[$i]['marca'] = $row_planets['MarcaDescrip'];
				$array[$i]['modelo'] = $row_planets['ModeloVersion'];
				$array[$i]['TipoCombustible'] = $row_planets['TipoCombustible'];
				$array[$i]['VersionAcabado'] = $row_planets['VersionAcabado'];
				$array[$i]['kw'] = $row_planets['kw'];
				$array[$i]['cv'] = $row_planets['cv'];
				$array[$i]['Cm3'] = $row_planets['Cm3'];
				$array[$i]['Ncilindros'] = $row_planets['Ncilindros'];
				$array[$i]['FechaInici'] = $row_planets['FechaInici'];
				$array[$i]['FechaFinal'] = $row_planets['FechaFinal'];
				if (isset($row_planets['Estado'])){
					$array[$i]['Estado'] = $row_planets['Estado'];
				} else {
					$array[$i]['Estado'] = '';
				}
				$array[$i]['RecambioID'] = $row_planets['RecambioID'];

				// Ahora Buscamos ID Marca
				$nombretabla = 'vehiculo_marcas';
				$BuscarMarca = "Select id FROM ".$nombretabla." where nombre='".$array[$i]['marca']."'";
				$idMarca = $BDVehiculos->query($BuscarMarca);
				if ($idMarca->num_rows ==1) {
					while ($row = $idMarca->fetch_assoc()){
					$array[$i]['IDmarca'] = $row['id'];
					
					}
				} else {
					// Error en marca, se encontro mas de una...
					// Deberiamos marcar error:
					$array[$i]['IDmarca'] ='Error' ;
				}
				// Ahora Buscamos ID Modelo
				$nombretabla = 'vehiculo_modelos';
				$BuscarModelo = 'Select id FROM '.$nombretabla.' where nombre="'.$array[$i]['modelo'].'"';
				$idModelo = $BDVehiculos->query($BuscarModelo);
				if ($idModelo->num_rows ==1) {
					while ($row = $idModelo->fetch_assoc()){
					$array[$i]['IDmodelo'] =$row['id'] ;
					}
				} else {
					// Error en modelo, se encontro mas de una...
					// Deberiamos marcar error:
					$array[$i]['IDmodelo'] ='Error' ;

				}
				// Ahora Buscamos el ID Tipo combustible 
				$IDCombustibles = array_keys($combustibles);
				foreach ($IDCombustibles as $ID){
					foreach ($combustibles[$ID] as $combustible){
						
						if ($array[$i]['TipoCombustible'] == $combustible){
							$array[$i]['IDCombustible'] = $ID;
						}
					}
				}
				
				
				$array[$i]['concatenado2'] = $array[$i]['IDmarca'].$array[$i]['IDmodelo'].$row_planets['concatenado'];
				// Este es where que vamos utilizar para buscar en versiones de BD vehiculos
				$array[$i]['BusquedaIDVersion'] = " where `idMarca`=".
												$array[$i]['IDmarca']." and idModelo=".
												$array[$i]['IDmodelo']." and nombre ='".
												$array[$i]['VersionAcabado']. "' and kw=".
												$array[$i]['kw']. " and cv=".
												$array[$i]['cv']. " and Cm3=".
												$array[$i]['Cm3']. " and Ncilindros=".
												$array[$i]['Ncilindros'];
				// Este es where que vamos utilizar para buscar nuevamente en referenciasCversiones en BDImport
				$array[$i]['BusquedaRefCversion'] = '(`MarcaDescrip`="'.
												$array[$i]['marca'].'" and ModeloVersion="'.
												$array[$i]['modelo'].'" and VersionAcabado ="'.
												$array[$i]['VersionAcabado']. '" and kw='.
												$array[$i]['kw']. ' and cv='.
												$array[$i]['cv']. ' and Cm3='.
												$array[$i]['Cm3']. ' and Ncilindros='.
												$array[$i]['Ncilindros']. ' and FechaInici="'.
												$array[$i]['FechaInici']. '" and FechaFinal="'.
												$array[$i]['FechaFinal']. '" and TipoCombustible="'.
												$array[$i]['TipoCombustible'].'")';
																	
				

				$array[$i]['concatenado1'] = $array[$i]['marca'].$array[$i]['modelo'].$row_planets['concatenado'];

				$i++;
			}
		}
		// Ahora tenemos una array con datos IDMarca y IDModelo para buscar la version.
		// Realizamo consulta en BDvehiculos-> Tabla versiones para saber si existe esa version de coche.
		
		$nombretabla= "vehiculo_versiones";
		for ( $i=0; $i< $array['NItems']; $i++) {
		$BuscarIDversion = "Select id FROM ".$nombretabla." ".$array[$i]['BusquedaIDVersion'];
		$idVersiones = $BDVehiculos->query($BuscarIDversion);
			$array[$i]['NumeroRowversiones']=$idVersiones->num_rows;
			if ($idVersiones->num_rows ==1) {
				while ($row = $idVersiones->fetch_assoc()){
				$array[$i]['IDversion'] =$row['id'] ;
				}
			} else {
				// Error en versiones, se encontro mas de una...
				// Deberiamos marcar error:
				$array[$i]['IDversion'] ='Error' ;
			}
			
		}
		
		// Ahora ya tenemos el id de los distintos vehiculos obtenido, ahora tenemos grabar dato id version en BDimport
		$nombretabla= "referenciascversiones";
		// Ahora montamos array de wheres para hacer un UPDATE unico para los que tienen error y para añadir id 
		$arrayWhereError = array();
		$x = 0;
		$y = 0;
		for ( $i=0; $i< $array['NItems']; $i++) {
			if ( $array[$i]['IDversion'] ==='Error') {
				$arrayWhereError[$x] = $array[$i]['BusquedaRefCversion'];
				$x++;
			} else {
				$arrayWhere[$y]	= 'when '.$array[$i]['BusquedaRefCversion'].' then '.$array[$i]['IDversion'];
				$y++;
			}
		}
		// Si el IDversiones tiene como valor "Error" en vez de numero , lo que hacemos es cambiar el estado a los registros
		// Aqui quedaría pendiente ver errores de marca y modelo.
		
		$Resumen['TotalRegistrosIDRecambios'] = 0;
		$Resumen['TotalRegistrosError'] = 0;
		
		if (count($arrayWhereError)>0) {
			//~ $whereC = implode(' or ',$arrayWhereError);
			//~ $QueryDis = 'UPDATE `referenciascversiones` SET `Estado`=" - Error de version" where '.$whereC;
			//~ $IdLineas = $BDImportRecambios->query($QueryDis);
			//~ $Resumen['TotalRegistrosError'] = $BDImportRecambios->affected_rows;
			//~ $Resumen['UPDATEerror'] = $QueryDis;

		}	
		if (count($arrayWhere)>0){
			$whereC = implode(' ',$arrayWhere);
			$QueryDis = 'UPDATE `referenciascversiones` SET `IdVersion`= CASE '.$whereC.' END';
			$IdLineas = $BDImportRecambios->query($QueryDis);
			$Resumen['TotalRegistrosIDRecambios'] = $BDImportRecambios->affected_rows;
			$Resumen['UPDATEID'] = $QueryDis;

		}
			$Resumen['TotalRegistrosAfectados'] = $Resumen['TotalRegistrosIDRecambios']+ $Resumen['TotalRegistrosError'];
			
				
		$Resumen['Array'] = $array; // Lo añado para ver que sucede, solo es un control debug
		
		return $Resumen;
	
	}
?>
